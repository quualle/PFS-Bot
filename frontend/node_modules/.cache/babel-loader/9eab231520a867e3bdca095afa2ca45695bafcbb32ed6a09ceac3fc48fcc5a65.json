{"ast":null,"code":"var _jsxFileName = \"/Users/marcoheer/Desktop/privat/Programmierung/XORA/PFS-Bot/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  login: async () => {},\n  adminLogin: async () => {},\n  logout: async () => {},\n  error: null\n});\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const response = await axios.get('/api/auth/status');\n        if (response.data.isAuthenticated) {\n          setUser(response.data.user);\n        }\n      } catch (error) {\n        console.error('Error checking auth status:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n  const login = async username => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await axios.post('/api/auth/login', {\n        username\n      });\n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('Failed to login. Please try again.');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const adminLogin = async (email, password) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await axios.post('/api/auth/admin-login', {\n        email,\n        password\n      });\n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Admin login error:', error);\n      setError('Invalid email or password.');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      setIsLoading(true);\n      await axios.post('/api/auth/logout');\n      setUser(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n      setError('Failed to logout. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated: !!user,\n      isLoading,\n      login,\n      adminLogin,\n      logout,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"caAZa649wyY9nHJT6au393y4yCs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","user","isAuthenticated","isLoading","login","adminLogin","logout","error","useAuth","_s","AuthProvider","children","_s2","setUser","setIsLoading","setError","checkAuthStatus","response","get","data","console","username","post","email","password","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marcoheer/Desktop/privat/Programmierung/XORA/PFS-Bot/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: string;\n  name: string;\n  email?: string;\n  role?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (username: string) => Promise<void>;\n  adminLogin: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  error: string | null;\n}\n\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  login: async () => {},\n  adminLogin: async () => {},\n  logout: async () => {},\n  error: null,\n});\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const response = await axios.get('/api/auth/status');\n        if (response.data.isAuthenticated) {\n          setUser(response.data.user);\n        }\n      } catch (error) {\n        console.error('Error checking auth status:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuthStatus();\n  }, []);\n\n  const login = async (username: string) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await axios.post('/api/auth/login', { username });\n      \n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('Failed to login. Please try again.');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const adminLogin = async (email: string, password: string) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await axios.post('/api/auth/admin-login', { email, password });\n      \n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Admin login error:', error);\n      setError('Invalid email or password.');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      setIsLoading(true);\n      await axios.post('/api/auth/logout');\n      setUser(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n      setError('Failed to logout. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated: !!user,\n        isLoading,\n        login,\n        adminLogin,\n        logout,\n        error,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}