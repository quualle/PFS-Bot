{
  "common_queries": {
    "get_active_care_stays_now": {
      "description": "Ruft alle AKTUELL laufenden Care Stays ab, die den heutigen Tag umfassen (aktive Betreuungen)",
      "required_parameters": ["seller_id"],
      "optional_parameters": ["limit"],
      "sql_template": "SELECT cs._id AS cs_id, cs.bill_start, cs.bill_end, cs.stage, cs.prov_seller, lead_names.first_name, lead_names.last_name, agencies.name AS agency_name, DATE_DIFF(DATE(TIMESTAMP(cs.bill_end)), DATE(TIMESTAMP(cs.bill_start)), DAY) AS care_stay_duration_days FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` AS cs JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.contracts` AS c ON cs.contract_id = c._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.households` AS h ON c.household_id = h._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.leads` AS l ON h.lead_id = l._id LEFT JOIN `gcpxbixpflegehilfesenioren.dataform_staging.leads_and_seller_and_source_with_address` AS lead_names ON l._id = lead_names._id LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.agencies` AS agencies ON c.agency_id = agencies._id WHERE l.seller_id = @seller_id AND cs.stage = 'Bestätigt' AND DATE(TIMESTAMP(cs.bill_start)) <= CURRENT_DATE() AND DATE(TIMESTAMP(cs.bill_end)) >= CURRENT_DATE() ORDER BY cs.bill_start DESC LIMIT @limit",
      "default_values": {
        "limit": 1000
      },
      "result_structure": {
        "cs_id": "ID des Care Stays",
        "bill_start": "Startdatum der Abrechnung",
        "bill_end": "Enddatum der Abrechnung",
        "stage": "Status des Care Stays",
        "prov_seller": "Provision für den Verkäufer",
        "first_name": "Vorname des Kunden",
        "last_name": "Nachname des Kunden",
        "agency_name": "Name der Agentur",
        "care_stay_duration_days": "Dauer des Care Stays in Tagen"
      }
    },

    "get_care_stays_by_date_range": {
      "description": "HAUPTFUNKTION FÜR ZEITRAUMBEZOGENE ABFRAGEN. Ruft Care Stays in einem bestimmten Zeitraum ab, mit flexibler Zeitfilterung.",
      "required_parameters": ["seller_id", "start_date", "end_date"],
      "optional_parameters": ["limit", "filter_type"],
      "sql_template": "SELECT cs._id AS cs_id, cs.bill_start, cs.bill_end, cs.stage, cs.prov_seller, lead_names.first_name, lead_names.last_name, agencies.name AS agency_name, DATE_DIFF(DATE(TIMESTAMP(cs.bill_end)), DATE(TIMESTAMP(cs.bill_start)), DAY) AS care_stay_duration_days FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` AS cs JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.contracts` AS c ON cs.contract_id = c._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.households` AS h ON c.household_id = h._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.leads` AS l ON h.lead_id = l._id LEFT JOIN `gcpxbixpflegehilfesenioren.dataform_staging.leads_and_seller_and_source_with_address` AS lead_names ON l._id = lead_names._id LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.agencies` AS agencies ON c.agency_id = agencies._id WHERE l.seller_id = @seller_id AND cs.stage = 'Bestätigt' AND CASE WHEN @filter_type = 'start' THEN DATE(TIMESTAMP(cs.bill_start)) BETWEEN @start_date AND @end_date WHEN @filter_type = 'end' THEN DATE(TIMESTAMP(cs.bill_end)) BETWEEN @start_date AND @end_date WHEN @filter_type = 'active' THEN DATE(TIMESTAMP(cs.bill_start)) <= @end_date AND DATE(TIMESTAMP(cs.bill_end)) >= @start_date ELSE DATE(TIMESTAMP(cs.bill_start)) BETWEEN @start_date AND @end_date END ORDER BY cs.bill_start DESC LIMIT @limit",
      "default_values": {
        "limit": 1000,
        "filter_type": "active"
      },
      "parameter_types": {
        "limit": "int",
        "filter_type": "string"
      },
      "result_structure": {
        "cs_id": "ID des Care Stays",
        "bill_start": "Startdatum der Abrechnung",
        "bill_end": "Enddatum der Abrechnung",
        "stage": "Status des Care Stays",
        "prov_seller": "Provision für den Verkäufer",
        "first_name": "Vorname des Kunden",
        "last_name": "Nachname des Kunden",
        "agency_name": "Name der Agentur",
        "care_stay_duration_days": "Dauer des Care Stays in Tagen"
      }
    },

    "get_contract_terminations": {
      "description": "Ruft beendete Verträge ab, mit detaillierter Unterscheidung zwischen ernsthaften Kündigungen, nicht-ernsthaften Kündigungen und Agenturwechseln",
      "required_parameters": ["seller_id", "start_date", "end_date"],
      "optional_parameters": ["limit"],
      "sql_template": "WITH terminated_contracts AS (SELECT c._id AS contract_id, c.termination_reason, c.created_at, c.updated_at, c.household_id, lead_names.first_name, lead_names.last_name, agencies.name AS agency_name, MAX(CASE WHEN cs.stage = 'Bestätigt' THEN cs.departure ELSE NULL END) AS last_departure_date, COUNT(CASE WHEN cs.stage = 'Bestätigt' THEN cs._id ELSE NULL END) AS care_stay_count, MIN(CASE WHEN cs.stage = 'Bestätigt' THEN cs.arrival ELSE NULL END) AS first_arrival_date, CASE WHEN NOT EXISTS (SELECT 1 FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` AS confirmed_cs WHERE confirmed_cs.contract_id = c._id AND confirmed_cs.stage = 'Bestätigt') AND EXISTS (SELECT 1 FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` AS aborted_cs WHERE aborted_cs.contract_id = c._id AND aborted_cs.stage = 'Abgebrochen') THEN 'Nicht ernsthaft' WHEN EXISTS (SELECT 1 FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.contracts` AS other_c JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` AS other_cs ON other_c._id = other_cs.contract_id AND other_cs.stage = 'Bestätigt' WHERE other_c.household_id = c.household_id AND other_c._id != c._id AND other_c.created_at > c.created_at) AND EXISTS (SELECT 1 FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` AS confirmed_cs WHERE confirmed_cs.contract_id = c._id AND confirmed_cs.stage = 'Bestätigt') THEN 'Agenturwechsel' ELSE 'Ernsthaft' END AS termination_type FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.contracts` AS c JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.households` AS h ON c.household_id = h._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.leads` AS l ON h.lead_id = l._id LEFT JOIN `gcpxbixpflegehilfesenioren.dataform_staging.leads_and_seller_and_source_with_address` AS lead_names ON l._id = lead_names._id LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.agencies` AS agencies ON c.agency_id = agencies._id LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` AS cs ON c._id = cs.contract_id WHERE l.seller_id = @seller_id AND c.archived = 'true' GROUP BY c._id, c.termination_reason, c.created_at, c.updated_at, c.household_id, lead_names.first_name, lead_names.last_name, agencies.name), filtered_contracts AS (SELECT * FROM terminated_contracts WHERE last_departure_date IS NOT NULL AND SUBSTR(last_departure_date, 1, 10) >= @start_date AND SUBSTR(last_departure_date, 1, 10) <= @end_date) SELECT contract_id, first_name, last_name, agency_name, termination_reason, termination_type, last_departure_date, first_arrival_date, created_at, updated_at, (SELECT COUNT(*) FROM filtered_contracts WHERE termination_type = 'Ernsthaft') AS serious_terminations_count, (SELECT COUNT(*) FROM filtered_contracts WHERE termination_type = 'Nicht ernsthaft') AS non_serious_terminations_count, (SELECT COUNT(*) FROM filtered_contracts WHERE termination_type = 'Agenturwechsel') AS agency_switch_count, (SELECT COUNT(*) FROM filtered_contracts) AS total_terminations_count FROM filtered_contracts ORDER BY last_departure_date DESC LIMIT @limit",
      "default_values": {
        "limit": 500,
        "start_date": "DATE_SUB(CURRENT_DATE(), INTERVAL 90 DAY)",
        "end_date": "CURRENT_DATE()"
      },
      "parameter_types": {
        "limit": "int",
        "start_date": "date",
        "end_date": "date"
      },
      "use_cases": [
        "Wenn nach Kündigungen in einem bestimmten Zeitraum gefragt wird - WICHTIG: immer die Aufschlüsselung ernsthaft vs. Agenturwechsel dazugeben",
        "Wenn eine Aufschlüsselung nach Kündigungsarten (ernsthaft vs. Agenturwechsel) benötigt wird",
        "Wenn Trends bei Vertragsbeendigungen analysiert werden sollen"
      ],
      "avoid_when": [
        "Nur nach aktuellen Verträgen gefragt wird",
        "Nur nach allgemeinen Kundendaten ohne Bezug zu Kündigungen gefragt wird"
      ],
      "result_structure": {
        "contract_id": "ID des Vertrags",
        "first_name": "Vorname des Kunden",
        "last_name": "Nachname des Kunden",
        "agency_name": "Name der Agentur",
        "termination_reason": "Grund für die Kündigung",
        "termination_type": "Art der Kündigung (Ernsthaft/Nicht ernsthaft/Agenturwechsel)",
        "last_departure_date": "Datum der letzten Abreise einer Pflegekraft",
        "first_arrival_date": "Datum der ersten Ankunft einer Pflegekraft",
        "created_at": "Erstellungsdatum des Vertrags",
        "updated_at": "Datum der letzten Aktualisierung des Vertrags",
        "serious_terminations_count": "Anzahl ernsthafter Kündigungen (tatsächlicher Kundenverlust)",
        "non_serious_terminations_count": "Anzahl nicht-ernsthafter Kündigungen (keine Pflegeeinsätze)",
        "agency_switch_count": "Anzahl Agenturwechsel (Kunde wechselte zu anderer Agentur)",
        "total_terminations_count": "Gesamtanzahl der Kündigungen"
      }
    },

    "get_customers_on_pause": {
      "description": "Ruft Kunden ab, die sich in einer Betreuungspause befinden (aktiver Vertrag, aber aktuell kein laufender Pflegeeinsatz)",
      "required_parameters": ["seller_id"],
      "optional_parameters": ["limit"],
      "sql_template": "WITH active_contracts AS (SELECT c._id AS contract_id, c.created_at, h.lead_id, lead_names.first_name, lead_names.last_name, agencies.name AS agency_name FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.contracts` AS c JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.households` AS h ON c.household_id = h._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.leads` AS l ON h.lead_id = l._id LEFT JOIN `gcpxbixpflegehilfesenioren.dataform_staging.leads_and_seller_and_source_with_address` AS lead_names ON l._id = lead_names._id LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.agencies` AS agencies ON c.agency_id = agencies._id WHERE l.seller_id = @seller_id AND c.archived = 'false'), has_previous_care_stays AS (SELECT c.contract_id, MAX(cs.departure) AS last_departure FROM active_contracts c JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` cs ON c.contract_id = cs.contract_id WHERE cs.stage = 'Bestätigt' AND DATE(TIMESTAMP(cs.arrival)) < CURRENT_DATE() GROUP BY c.contract_id), current_care_stays AS (SELECT c.contract_id FROM active_contracts c JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` cs ON c.contract_id = cs.contract_id WHERE cs.stage = 'Bestätigt' AND DATE(TIMESTAMP(cs.arrival)) <= CURRENT_DATE() AND DATE(TIMESTAMP(cs.departure)) >= CURRENT_DATE()), next_care_stays AS (SELECT contract_id, next_arrival, next_stage FROM (SELECT c.contract_id, cs.arrival AS next_arrival, cs.stage AS next_stage, ROW_NUMBER() OVER (PARTITION BY c.contract_id ORDER BY cs.arrival) AS rn FROM active_contracts c JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` cs ON c.contract_id = cs.contract_id WHERE DATE(TIMESTAMP(cs.arrival)) > CURRENT_DATE()) WHERE rn = 1) SELECT ac.contract_id, ac.first_name, ac.last_name, ac.agency_name, hpcs.last_departure, DATE_DIFF(CURRENT_DATE(), DATE(TIMESTAMP(hpcs.last_departure)), DAY) AS days_on_pause, ncs.next_arrival AS naechster_carestay, ncs.next_stage AS status_naechster_carestay, (SELECT COUNT(*) FROM has_previous_care_stays hpcs2 WHERE hpcs2.contract_id NOT IN (SELECT contract_id FROM current_care_stays) AND hpcs2.last_departure IS NOT NULL) AS total_paused_customers FROM active_contracts ac JOIN has_previous_care_stays hpcs ON ac.contract_id = hpcs.contract_id LEFT JOIN next_care_stays ncs ON ac.contract_id = ncs.contract_id WHERE ac.contract_id NOT IN (SELECT contract_id FROM current_care_stays) AND hpcs.last_departure IS NOT NULL ORDER BY days_on_pause DESC LIMIT 10000",
      "default_values": {
        "limit": 500
      },
      "result_structure": {
        "contract_id": "ID des Vertrags",
        "first_name": "Vorname des Kunden",
        "last_name": "Nachname des Kunden",
        "agency_name": "Name der Agentur",
        "last_bill_end": "Ende des letzten Care Stays",
        "days_on_pause": "Tage seit dem letzten Care Stay",
        "total_paused_customers": "Gesamtzahl der Kunden in Pause"
      }
    },

    "get_customer_history": {
      "description": "Ruft die vollständige Geschichte eines Kunden ab, einschließlich aller Care Stays und Verträge",
      "required_parameters": ["customer_name"],
      "optional_parameters": ["seller_id", "limit"],
      "sql_template": "WITH customer_info AS (SELECT l._id AS lead_id, l.seller_id, la.first_name, la.last_name, l.created_at AS lead_created_at, h._id AS household_id FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.leads` AS l JOIN `gcpxbixpflegehilfesenioren.dataform_staging.leads_and_seller_and_source_with_address` AS la ON l._id = la._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.households` AS h ON h.lead_id = l._id WHERE (@seller_id IS NULL OR l.seller_id = @seller_id) AND (LOWER(la.first_name) LIKE CONCAT('%', LOWER(@customer_name), '%') OR LOWER(la.last_name) LIKE CONCAT('%', LOWER(@customer_name), '%'))), contracts AS (SELECT c._id AS contract_id, c.archived, c.termination_reason, c.created_at AS contract_created_at, c.updated_at AS contract_updated_at, ci.lead_id, ci.first_name, ci.last_name, agencies.name AS agency_name FROM customer_info ci JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.contracts` AS c ON ci.household_id = c.household_id LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.agencies` AS agencies ON c.agency_id = agencies._id), care_stays AS (SELECT cs._id AS care_stay_id, cs.bill_start, cs.bill_end, cs.stage, cs.prov_seller, co.contract_id, co.lead_id, co.first_name, co.last_name, co.agency_name, cg.first_name AS caregiver_first_name, cg.last_name AS caregiver_last_name, DATE_DIFF(DATE(TIMESTAMP(cs.bill_end)), DATE(TIMESTAMP(cs.bill_start)), DAY) AS care_stay_duration_days FROM contracts co JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` cs ON co.contract_id = cs.contract_id LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_giver_instances` cgi ON cs.care_giver_instance_id = cgi._id LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_givers` cg ON cgi.care_giver_id = cg._id WHERE cs.stage = 'Bestätigt'), tickets AS (SELECT t._id AS ticket_id, t.subject, t.created_at AS ticket_created_at, t.ticketable_type, CASE WHEN t.ticketable_type = 'Lead' THEN ci.lead_id WHEN t.ticketable_type = 'Contract' THEN t.ticketable_id WHEN t.ticketable_type = 'CareStay' THEN cs1.contract_id END AS related_id, ci.lead_id FROM customer_info ci LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.tickets` t ON (t.ticketable_type = 'Lead' AND t.ticketable_id = ci.lead_id) LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` cs1 ON (t.ticketable_type = 'CareStay' AND t.ticketable_id = cs1._id) WHERE t._id IS NOT NULL), contract_stats AS (SELECT lead_id, COUNT(*) AS contracts_count, MIN(contract_created_at) AS first_contract_date, STRING_AGG(DISTINCT agency_name, ', ') AS agencies, STRING_AGG(FORMAT('Vertrag vom %s mit %s, Status: %s', FORMAT_TIMESTAMP('%d.%m.%Y', TIMESTAMP(contract_created_at)), agency_name, CASE WHEN archived = 'false' THEN 'Aktiv' ELSE 'Beendet' END), '\n' ORDER BY contract_created_at) AS contracts_summary FROM contracts GROUP BY lead_id), care_stay_stats AS (SELECT lead_id, COUNT(*) AS care_stays_count, MIN(bill_start) AS first_care_stay_date, SUM(care_stay_duration_days) AS total_care_days, STRING_AGG(FORMAT('Einsatz vom %s bis %s (%d Tage), Pflegekraft: %s %s, Provision: %d€', FORMAT_TIMESTAMP('%d.%m.%Y', TIMESTAMP(bill_start)), FORMAT_TIMESTAMP('%d.%m.%Y', TIMESTAMP(bill_end)), care_stay_duration_days, caregiver_first_name, caregiver_last_name, CAST(prov_seller AS INT64)), '\n' ORDER BY bill_start) AS care_stays_summary FROM care_stays GROUP BY lead_id), ticket_stats AS (SELECT lead_id, COUNT(*) AS tickets_count, STRING_AGG(FORMAT('Ticket vom %s: %s (Typ: %s)', FORMAT_TIMESTAMP('%d.%m.%Y', TIMESTAMP(ticket_created_at)), subject, ticketable_type), '\n' ORDER BY ticket_created_at DESC) AS tickets_summary FROM tickets GROUP BY lead_id) SELECT ci.lead_id, ci.first_name, ci.last_name, ci.lead_created_at, COALESCE(cs.contracts_count, 0) AS contracts_count, COALESCE(css.care_stays_count, 0) AS care_stays_count, COALESCE(ts.tickets_count, 0) AS tickets_count, cs.first_contract_date, css.first_care_stay_date, COALESCE(css.total_care_days, 0) AS total_care_days, cs.agencies, cs.contracts_summary, css.care_stays_summary, ts.tickets_summary FROM customer_info ci LEFT JOIN contract_stats cs ON ci.lead_id = cs.lead_id LEFT JOIN care_stay_stats css ON ci.lead_id = css.lead_id LEFT JOIN ticket_stats ts ON ci.lead_id = ts.lead_id ORDER BY ci.last_name, ci.first_name LIMIT @limit",
      "default_values": {
        "limit": 50
      },
      "result_structure": {
        "lead_id": "ID des Leads",
        "first_name": "Vorname des Kunden",
        "last_name": "Nachname des Kunden",
        "lead_created_at": "Erstellungsdatum des Leads",
        "contracts_count": "Anzahl der Verträge",
        "care_stays_count": "Anzahl der Care Stays",
        "first_contract_date": "Datum des ersten Vertrags",
        "first_care_stay_date": "Datum des ersten Care Stays",
        "total_care_days": "Gesamtzahl der Betreuungstage",
        "agencies": "Liste der Agenturen",
        "contracts_summary": "Zusammenfassung aller Verträge",
        "care_stays_summary": "Zusammenfassung aller Care Stays"
      }
    },

    "get_monthly_performance": {
      "description": "Ruft monatliche Leistungskennzahlen für einen Verkäufer ab (alle aktiven Care Stays im Monat)",
      "required_parameters": ["seller_id", "start_date", "end_date"],
      "optional_parameters": [],
      "sql_template": "WITH active_care_stays AS (SELECT cs._id AS care_stay_id, cs.bill_start, cs.bill_end, cs.prov_seller, lead_names.first_name, lead_names.last_name, agencies.name AS agency_name, DATE_DIFF(DATE(TIMESTAMP(cs.bill_end)), DATE(TIMESTAMP(cs.bill_start)), DAY) AS care_stay_duration_days FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` AS cs JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.contracts` AS c ON cs.contract_id = c._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.households` AS h ON c.household_id = h._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.leads` AS l ON h.lead_id = l._id LEFT JOIN `gcpxbixpflegehilfesenioren.dataform_staging.leads_and_seller_and_source_with_address` AS lead_names ON l._id = lead_names._id LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.agencies` AS agencies ON c.agency_id = agencies._id WHERE l.seller_id = @seller_id AND cs.stage = 'Bestätigt' AND (DATE(TIMESTAMP(cs.bill_start)) <= @end_date AND DATE(TIMESTAMP(cs.bill_end)) >= @start_date)) SELECT COUNT(*) AS total_active_care_stays, SUM(CAST(prov_seller AS FLOAT64)) AS total_revenue, ROUND(AVG(CAST(prov_seller AS FLOAT64)), 2) AS average_revenue_per_care_stay, ROUND(AVG(care_stay_duration_days), 1) AS average_duration, FORMAT('%s - %s', FORMAT_DATE('%d.%m.%Y', DATE(@start_date)), FORMAT_DATE('%d.%m.%Y', DATE(@end_date))) AS period, STRING_AGG(DISTINCT agency_name, ', ') AS active_agencies, ARRAY_TO_STRING(ARRAY(SELECT DISTINCT FORMAT('%s %s (%s): %d€', first_name, last_name, agency_name, CAST(prov_seller AS INT64)) FROM active_care_stays ORDER BY first_name, last_name), '\n') AS customer_details FROM active_care_stays",
      "default_values": {},
      "result_structure": {
        "total_active_care_stays": "Gesamtzahl aktiver Care Stays im Zeitraum",
        "total_revenue": "Gesamtumsatz im Zeitraum",
        "average_revenue_per_care_stay": "Durchschnittlicher Umsatz pro Care Stay",
        "average_duration": "Durchschnittliche Dauer der Care Stays",
        "period": "Ausgewerteter Zeitraum",
        "active_agencies": "Aktive Agenturen im Zeitraum",
        "customer_details": "Detaillierte Übersicht aller Kunden mit Umsatz"
      }
    },

    "get_revenue_by_agency": {
      "description": "Ruft Umsatz nach Agentur für einen Verkäufer ab mit Detailinformationen zu Kunden",
      "required_parameters": ["seller_id"],
      "optional_parameters": ["agency_name", "start_date", "end_date"],
      "sql_template": "WITH agency_revenue AS (SELECT cs._id AS care_stay_id, a.name AS agency_name, lead_names.first_name, lead_names.last_name, cs.bill_start, cs.bill_end, CAST(cs.prov_seller AS FLOAT64) AS revenue FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` AS cs JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.contracts` AS c ON cs.contract_id = c._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.agencies` AS a ON c.agency_id = a._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.households` AS h ON c.household_id = h._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.leads` AS l ON h.lead_id = l._id LEFT JOIN `gcpxbixpflegehilfesenioren.dataform_staging.leads_and_seller_and_source_with_address` AS lead_names ON l._id = lead_names._id WHERE l.seller_id = @seller_id AND cs.stage = 'Bestätigt' AND (@agency_name IS NULL OR LOWER(a.name) LIKE CONCAT('%', LOWER(@agency_name), '%')) AND (@start_date IS NULL OR DATE(TIMESTAMP(cs.bill_start)) <= @end_date) AND (@end_date IS NULL OR DATE(TIMESTAMP(cs.bill_end)) >= @start_date)) SELECT agency_name, COUNT(DISTINCT care_stay_id) AS care_stays_count, SUM(revenue) AS total_revenue, ARRAY_TO_STRING(ARRAY(SELECT DISTINCT FORMAT('%s %s: %d€ (Einsatz vom %s bis %s)', first_name, last_name, CAST(revenue AS INT64), FORMAT_TIMESTAMP('%d.%m.%Y', TIMESTAMP(bill_start)), FORMAT_TIMESTAMP('%d.%m.%Y', TIMESTAMP(bill_end))) FROM agency_revenue ar WHERE ar.agency_name = agency_revenue.agency_name ORDER BY first_name, last_name), '\n') AS revenue_details FROM agency_revenue GROUP BY agency_name ORDER BY total_revenue DESC",
      "default_values": {
        "start_date": "DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)",
        "end_date": "CURRENT_DATE()"
      },
      "result_structure": {
        "agency_name": "Name der Agentur",
        "care_stays_count": "Anzahl der Care Stays bei dieser Agentur",
        "total_revenue": "Gesamtumsatz mit dieser Agentur",
        "revenue_details": "Detaillierte Auflistung aller Umsätze mit Kundennamen"
      }
    },

    "get_leads_converted_to_customers": {
      "description": "Ruft Leads ab, die im angegebenen Zeitraum zu Kunden konvertiert wurden (ohne vorherige Verträge)",
      "required_parameters": ["seller_id", "start_date", "end_date"],
      "optional_parameters": ["limit"],
      "sql_template": "WITH new_leads AS (SELECT l._id AS lead_id, l.created_at, la.first_name, la.last_name FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.leads` AS l JOIN `gcpxbixpflegehilfesenioren.dataform_staging.leads_and_seller_and_source_with_address` AS la ON l._id = la._id WHERE l.seller_id = @seller_id AND DATE(TIMESTAMP(l.created_at)) BETWEEN @start_date AND @end_date), converted_leads AS (SELECT nl.lead_id, nl.first_name, nl.last_name, nl.created_at AS lead_created_at, MIN(c.created_at) AS first_contract_date, agencies.name AS agency_name, (SELECT COUNT(*) FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` cs WHERE cs.contract_id = c._id AND cs.stage = 'Bestätigt') AS care_stays_count FROM new_leads nl JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.households` h ON nl.lead_id = h.lead_id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.contracts` c ON h._id = c.household_id LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.agencies` agencies ON c.agency_id = agencies._id GROUP BY nl.lead_id, nl.first_name, nl.last_name, nl.created_at, agencies.name HAVING MIN(c.created_at) IS NOT NULL AND NOT EXISTS (SELECT 1 FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.contracts` c2 JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.households` h2 ON c2.household_id = h2._id WHERE h2.lead_id = nl.lead_id AND DATE(TIMESTAMP(c2.created_at)) < @start_date)) SELECT lead_id, first_name, last_name, lead_created_at, first_contract_date, agency_name, care_stays_count, DATE_DIFF(DATE(TIMESTAMP(first_contract_date)), DATE(TIMESTAMP(lead_created_at)), DAY) AS days_to_conversion, (SELECT COUNT(*) FROM converted_leads) AS total_converted_leads_count FROM converted_leads ORDER BY lead_created_at DESC LIMIT @limit",
      "default_values": {
        "limit": 500
      },
      "result_structure": {
        "lead_id": "ID des Leads",
        "first_name": "Vorname des Kunden",
        "last_name": "Nachname des Kunden",
        "lead_created_at": "Erstellungsdatum des Leads",
        "first_contract_date": "Datum des ersten Vertrags",
        "agency_name": "Name der Agentur",
        "care_stays_count": "Anzahl der Care Stays",
        "days_to_conversion": "Tage von Lead zu Vertrag",
        "total_converted_leads_count": "Gesamtanzahl konvertierter Leads"
      }
    },

    "get_care_givers_for_customer": {
      "description": "Ruft Pflegekräfte für einen bestimmten Kunden ab",
      "required_parameters": ["customer_name"],
      "optional_parameters": ["seller_id", "limit"],
      "sql_template": "WITH customer_info AS (SELECT l._id AS lead_id, l.seller_id FROM `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.leads` AS l JOIN `gcpxbixpflegehilfesenioren.dataform_staging.leads_and_seller_and_source_with_address` AS la ON l._id = la._id WHERE (@seller_id IS NULL OR l.seller_id = @seller_id) AND (LOWER(la.first_name) LIKE CONCAT('%', LOWER(@customer_name), '%') OR LOWER(la.last_name) LIKE CONCAT('%', LOWER(@customer_name), '%'))) SELECT cg.first_name AS caregiver_first_name, cg.last_name AS caregiver_last_name, cg.gender AS caregiver_gender, cs.bill_start, cs.bill_end, cs.stage, agencies.name AS agency_name, lead_names.first_name AS customer_first_name, lead_names.last_name AS customer_last_name, DATE_DIFF(DATE(TIMESTAMP(cs.bill_end)), DATE(TIMESTAMP(cs.bill_start)), DAY) AS care_stay_duration_days FROM customer_info ci JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.households` h ON h.lead_id = ci.lead_id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.contracts` c ON h._id = c.household_id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_stays` cs ON c._id = cs.contract_id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_giver_instances` cgi ON cs.care_giver_instance_id = cgi._id JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.care_givers` cg ON cgi.care_giver_id = cg._id LEFT JOIN `gcpxbixpflegehilfesenioren.PflegehilfeSeniore_BI.agencies` agencies ON c.agency_id = agencies._id LEFT JOIN `gcpxbixpflegehilfesenioren.dataform_staging.leads_and_seller_and_source_with_address` AS lead_names ON ci.lead_id = lead_names._id WHERE cs.stage = 'Bestätigt' ORDER BY cs.bill_start DESC LIMIT @limit",
      "default_values": {
        "limit": 100
      },
      "result_structure": {
        "caregiver_first_name": "Vorname der Pflegekraft",
        "caregiver_last_name": "Nachname der Pflegekraft",
        "caregiver_gender": "Geschlecht der Pflegekraft",
        "bill_start": "Startdatum der Abrechnung",
        "bill_end": "Enddatum der Abrechnung",
        "stage": "Status des Care Stays",
        "agency_name": "Name der Agentur",
        "customer_first_name": "Vorname des Kunden",
        "customer_last_name": "Nachname des Kunden",
        "care_stay_duration_days": "Dauer des Care Stays in Tagen"
      }
    }
  }
}